#项目端口号
server.port=8080
#mysql配置
spring.datasource.username=root
spring.datasource.password=1234
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/test?serverTimezone=UTC&useUnicode=true&characterEncoding=utf-8
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#整合mybatis
#扫描类 这样就可以不用写全包名了
mybatis.type-aliases-package=com.fujinjin.river.bean
#扫描mapper.xml文件
mybatis.mapper-locations=classpath:dao/mapper/*.xml,classpath:system/dao/mapper/*.xml



#应用上下文[进行合理的项目url划分，解决项目冲突]
#一般情况下小项目通常在tomcat下部署多个webapp，通过上下文区分
#在集群或大型项目中，通常一个tomcat对应一个webapp，然后不同端口进行区分
server.servlet.context-path=/
#UTF-8只包含了二万+ 个中文字符，对于生僻字显示不了
server.servlet.encoding.charset=utf-8
#设置json日期序列化输出格式相对北京时间与格林尼治时间有八个小时的时差,设置偏移量
spring.jackson.time-zone=GMT+8
#格式化json输出的时间问题，将格林尼治时间进行转换
spring.jackson.date-format=yyy-MM-dd HH:mm:ss SSS
#日志输出地址，springBoot默认并没有进行日志文件输出，只在控制台打印，想输出日志则进行下面配置：
logging.file.name=logs/msg.log
#日志级别 debug → info → warn → error  默认情况Spring Boot日志级别为info
#如果设置debug为true时，则日志级别降低到debug
debug=false
#Root代表默认全局设置
logging.level.ROOT=INFO
#设置指定包的输出级别
logging.level.org.springframework=ERROR
logging.level.org.apache=ERROR
